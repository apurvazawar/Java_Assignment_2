/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarList;

/**
 *
 * @author apurvazawar
 */
public class UpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    CarList history;
    
    public UpdateJPanel(CarList history) {
        initComponents();
        this.history = history; 
        populateCarList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        brand = new javax.swing.JLabel();
        seatNo = new javax.swing.JLabel();
        city = new javax.swing.JLabel();
        engineNo = new javax.swing.JLabel();
        modelNum = new javax.swing.JLabel();
        model = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        available = new javax.swing.JLabel();
        maintainenceExpiry = new javax.swing.JLabel();
        serialNum = new javax.swing.JLabel();
        licencePlate = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtSeatNo = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtEngineNo = new javax.swing.JTextField();
        txtLicencePlate = new javax.swing.JTextField();
        txtSerialNum = new javax.swing.JTextField();
        txtModelNum = new javax.swing.JTextField();
        title = new javax.swing.JLabel();
        color = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnView = new javax.swing.JButton();

        setBackground(new java.awt.Color(22, 36, 63));
        setForeground(new java.awt.Color(255, 255, 255));

        brand.setBackground(new java.awt.Color(22, 36, 63));
        brand.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        brand.setForeground(new java.awt.Color(255, 255, 255));
        brand.setText("Brand");

        seatNo.setBackground(new java.awt.Color(22, 36, 63));
        seatNo.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        seatNo.setForeground(new java.awt.Color(255, 255, 255));
        seatNo.setText("Seat No.");

        city.setBackground(new java.awt.Color(22, 36, 63));
        city.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        city.setForeground(new java.awt.Color(255, 255, 255));
        city.setText("City");

        engineNo.setBackground(new java.awt.Color(22, 36, 63));
        engineNo.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        engineNo.setForeground(new java.awt.Color(255, 255, 255));
        engineNo.setText("Engine No.");

        modelNum.setBackground(new java.awt.Color(22, 36, 63));
        modelNum.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        modelNum.setForeground(new java.awt.Color(255, 255, 255));
        modelNum.setText("Model No.");

        model.setBackground(new java.awt.Color(22, 36, 63));
        model.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        model.setForeground(new java.awt.Color(255, 255, 255));
        model.setText("Model");

        year.setBackground(new java.awt.Color(22, 36, 63));
        year.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        year.setForeground(new java.awt.Color(255, 255, 255));
        year.setText("Year");

        available.setBackground(new java.awt.Color(22, 36, 63));
        available.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        available.setForeground(new java.awt.Color(255, 255, 255));
        available.setText("Available");

        maintainenceExpiry.setBackground(new java.awt.Color(22, 36, 63));
        maintainenceExpiry.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        maintainenceExpiry.setForeground(new java.awt.Color(255, 255, 255));
        maintainenceExpiry.setText("Maintainence Expiry");

        serialNum.setBackground(new java.awt.Color(22, 36, 63));
        serialNum.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        serialNum.setForeground(new java.awt.Color(255, 255, 255));
        serialNum.setText("Serial No.");

        licencePlate.setBackground(new java.awt.Color(22, 36, 63));
        licencePlate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        licencePlate.setForeground(new java.awt.Color(255, 255, 255));
        licencePlate.setText("Licence Plate");

        txtBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrandActionPerformed(evt);
            }
        });

        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(22, 36, 63));
        title.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("View Car Record");

        color.setBackground(new java.awt.Color(22, 36, 63));
        color.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        color.setForeground(new java.awt.Color(255, 255, 255));
        color.setText("Color");

        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(22, 36, 63));
        jCheckBox1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Yes");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(22, 36, 63));
        jCheckBox2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("No");

        jCheckBox3.setBackground(new java.awt.Color(22, 36, 63));
        jCheckBox3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Yes");

        jCheckBox4.setBackground(new java.awt.Color(22, 36, 63));
        jCheckBox4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jCheckBox4.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setText("No");

        jTable1.setBackground(new java.awt.Color(22, 36, 63));
        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Model", "Color", "Year", "Seats", "City", "Engine No.", "Licence plate", "Serial No.", "Model No.", "Maintainence Expiry", "Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnView.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnView.setText("View Car");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(brand)
                            .addComponent(maintainenceExpiry)
                            .addComponent(year)
                            .addComponent(engineNo)
                            .addComponent(btnView))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEngineNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jCheckBox1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCheckBox2)))
                            .addComponent(btnUpdate))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatNo)
                            .addComponent(model)
                            .addComponent(licencePlate)
                            .addComponent(available))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox4))
                            .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSeatNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLicencePlate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modelNum)
                                .addGap(18, 18, 18)
                                .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(serialNum)
                                .addGap(18, 18, 18)
                                .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(color)
                                    .addComponent(city))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(title)
                    .addComponent(jScrollPane1))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(title)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brand)
                    .addComponent(model)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(year)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatNo)
                    .addComponent(txtSeatNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(city)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(engineNo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEngineNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(licencePlate)
                        .addComponent(txtLicencePlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(serialNum)
                        .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNum)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maintainenceExpiry)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(available, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnView))
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrandActionPerformed

    private static boolean isAlphabetOrDigits(String str) {
        return str.codePoints().allMatch(ch -> Character.isAlphabetic(ch) || Character.isDigit(ch));
    }

    private static boolean isAlphabet(String str) {
        return str.codePoints().allMatch(ch -> Character.isAlphabetic(ch));
    }
     
    public static boolean isDateValid(String date) {
        try {
            DateFormat df = new SimpleDateFormat("dd-MM-yyyy");
            df.setLenient(false);
            Date dt0 = df.parse(date);
            Date dt1 = df.parse("01-01-1990");
            String currentDate = df.format(new Date());
            Date dt2 = df.parse(currentDate);
            if(dt0.after(dt1) && dt0.before(dt2)){
                return true;
            } else {
                return false;
            }
        } catch (ParseException e) {
            return false;
        }
    }
    
    public static boolean isNumeric(String str) { 
        try { 
          Double.parseDouble(str);  
          return true;
        } catch(NumberFormatException e){  
          return false;  
        }  
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        boolean saveCar=true;
        
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        
        int selectedRowIndex = jTable1.getSelectedRow();
        
        Car cd = new Car();
        
        if(txtBrand.getText().length() > 0 && isAlphabet(txtBrand.getText())){
            cd.setBrand(txtBrand.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter brand name in alphabets!");
            saveCar=false;
        }
        
        if(txtModel.getText().length() > 0 && isAlphabetOrDigits(txtModel.getText())){
            cd.setModel(txtModel.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter a valid model name!");
            saveCar=false;
        }
        
        if(txtColor.getText().length() > 0 && isAlphabet(txtColor.getText())){
           cd.setColor(txtColor.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter the color in alphabets!");
            saveCar=false;
        }
               
        if(txtYear.getText().length() > 0 && Integer.parseInt(txtYear.getText()) > 1989 && Integer.parseInt(txtYear.getText()) < 2023){
            cd.setYear(Integer.parseInt(txtYear.getText()));
        } else {
            JOptionPane.showMessageDialog(null,"Please enter the year between 1989 to 2023!");
            saveCar=false;
        }
        
        if(txtSeatNo.getText().length() > 0 && Integer.parseInt(txtSeatNo.getText()) > 1 && Integer.parseInt(txtSeatNo.getText()) < 10){
            cd.setSeatsNo(Integer.parseInt(txtSeatNo.getText()));
        } else {
            JOptionPane.showMessageDialog(null,"Please enter seat number between 2 to 10!");
            saveCar=false;
        }
         
        if(txtCity.getText().length() > 0 && isAlphabet(txtCity.getText())){
           cd.setCity(txtCity.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter the city in alphabets!");
            saveCar=false;
        }
        
        if(txtEngineNo.getText().length() > 0 && isAlphabetOrDigits(txtEngineNo.getText())){
            cd.setEngineNo(txtEngineNo.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter valid Engine no.!");
            saveCar=false;
        }

        if(txtLicencePlate.getText().length() > 0 && isAlphabetOrDigits(txtLicencePlate.getText())){
            cd.setLicensePlate(txtLicencePlate.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter correct Licence plate number!");
            saveCar=false;
        }
        
        if(txtSerialNum.getText().length() > 0 && isAlphabetOrDigits(txtSerialNum.getText()) && txtSerialNum.getText().length() > 11 && txtSerialNum.getText().length() < 18){
            cd.setSerialNum(txtSerialNum.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter correct Serial number!");
            saveCar=false;
        }
            
        if(txtModelNum.getText().length() > 0 && isAlphabetOrDigits(txtModelNum.getText()) && txtModelNum.getText().length() == 17){
            cd.setModelNum(txtModelNum.getText());
        } else {
            JOptionPane.showMessageDialog(null,"Please enter 17 digit Model number!");
            saveCar=false;
        }
        
        Boolean expiryYes = jCheckBox1.isSelected();
        Boolean expiryNo = jCheckBox2.isSelected();
        
        if(expiryYes == true && expiryNo == false){
            cd.setMaintainenceExpiry("yes");
        } else {
            cd.setMaintainenceExpiry("no");
        }
        
        if((expiryYes == false && expiryNo == false) || (expiryYes == true && expiryNo == true)) {
            JOptionPane.showMessageDialog(null,"Please select the Maintainence Expiry");
            saveCar=false;
        }
        
        Boolean availableYes = jCheckBox3.isSelected();
        Boolean availableNo = jCheckBox4.isSelected();
        
        if(availableYes == true && availableNo == false){
            cd.setAvailable("yes");
        } else {
            cd.setAvailable("no");
        }

        if((availableYes == false && availableNo == false) || (availableYes == true && availableNo == true)) {
            JOptionPane.showMessageDialog(null,"Please select the availability");
            saveCar=false;
        }

        if(saveCar) {
            history.addNewCar(false, selectedRowIndex, cd);
            JOptionPane.showMessageDialog(this, "Car updated successfully!!");

            populateCarList();
            
            txtBrand.setText("");
            txtModel.setText("");
            txtColor.setText("");
            txtYear.setText("");
            txtSeatNo.setText("");
            txtCity.setText("");
            txtEngineNo.setText("");
            txtLicencePlate.setText("");
            txtSerialNum.setText("");
            txtModelNum.setText("");
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable1.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this,"Please select a row to view!");
            return;
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        
        String brandName = tableModel.getValueAt(selectedRowIndex, 0).toString();
        String modelName = tableModel.getValueAt(selectedRowIndex, 1).toString();
        String colorTx = tableModel.getValueAt(selectedRowIndex, 2).toString();
        String yearTx = tableModel.getValueAt(selectedRowIndex, 3).toString();
        String seatNoTx = tableModel.getValueAt(selectedRowIndex, 4).toString();
        String cityTx = tableModel.getValueAt(selectedRowIndex, 5).toString();
        String engineNoTx = tableModel.getValueAt(selectedRowIndex, 6).toString();
        String licensePlateTx = tableModel.getValueAt(selectedRowIndex, 7).toString();
        String serialNumTx = tableModel.getValueAt(selectedRowIndex, 8).toString();
        String modelNumTx = tableModel.getValueAt(selectedRowIndex, 9).toString();
        String maintainenceExpiryChkBx = tableModel.getValueAt(selectedRowIndex, 10).toString();
        String availableChkBx = tableModel.getValueAt(selectedRowIndex, 11).toString();
        
        txtBrand.setText(brandName);
        txtModel.setText(modelName);
        txtColor.setText(colorTx);
        txtYear.setText(yearTx);
        txtSeatNo.setText(seatNoTx);
        txtCity.setText(cityTx);
        txtEngineNo.setText(engineNoTx);
        txtLicencePlate.setText(licensePlateTx);
        txtSerialNum.setText(serialNumTx);
        txtModelNum.setText(modelNumTx);
        if(maintainenceExpiryChkBx.equalsIgnoreCase("yes")){
            jCheckBox1.setSelected(true);
            jCheckBox2.setSelected(false);
        } else {
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(true);
        }
        if(availableChkBx.equalsIgnoreCase("yes")){
            jCheckBox3.setSelected(true);
            jCheckBox4.setSelected(false);
        } else {
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(true);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void populateCarList() {
        
        DefaultTableModel carModel = (DefaultTableModel) jTable1.getModel();
        carModel.setRowCount(0);
        
        for(Car cd: history.getHistory()){
         
           Object[] row = new Object[12];
           row[0] = cd.getBrand();
           row[1] = cd.getModel();
           row[2] = cd.getColor();
           row[3] = cd.getYear();
           row[4] = cd.getSeatsNo();
           row[5] = cd.getCity();
           row[6] = cd.getEngineNo();
           row[7] = cd.getLicensePlate();
           row[8] = cd.getSerialNum();
           row[9] = cd.getModelNum();
           if("yes".equals(cd.getMaintainenceExpiry())){
               row[10] = "Yes";
           }else{
               row[10] = "No";
           }
           if("yes".equals(cd.getAvailable())){
               row[11] = "Yes";
           }else{
               row[11] = "No";
           }
           carModel.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel available;
    private javax.swing.JLabel brand;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel city;
    private javax.swing.JLabel color;
    private javax.swing.JLabel engineNo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel licencePlate;
    private javax.swing.JLabel maintainenceExpiry;
    private javax.swing.JLabel model;
    private javax.swing.JLabel modelNum;
    private javax.swing.JLabel seatNo;
    private javax.swing.JLabel serialNum;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtEngineNo;
    private javax.swing.JTextField txtLicencePlate;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtSeatNo;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtYear;
    private javax.swing.JLabel year;
    // End of variables declaration//GEN-END:variables
}
